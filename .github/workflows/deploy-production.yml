name: Deploy Production
on:
  push:
    branches:
      - master

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  build:
    name: Install dependencies
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Setup Vercel CLI
        run: yarn global add vercel@latest

  test:
    name: Execute tests
    runs-on: ubuntu-latest
    needs: [build]
    permissions: write-all
    strategy:
      fail-fast: false
      matrix:
        containers: [1, 2]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run Cypress tests
        uses: cypress-io/github-action@v4
        with:
          browser: chrome
          start: yarn dev --host
          wait-on: 'http://localhost:5173'
          record: true
          parallel: true
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    name: Build and deploy application
    runs-on: ubuntu-latest
    needs: [build, test]
    environment:
      name: Production
      url: ${{ env.PRODUCTION_URL }}
    strategy:
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Pull Vercel environment information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build project artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy as production to Vercel and configure repo environment
        run: |
          PRODUCTION_URL=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }})
          echo "PRODUCTION_URL=$PRODUCTION_URL" >> $GITHUB_ENV
